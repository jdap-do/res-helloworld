pipeline {
    agent any

    options {
        skipDefaultCheckout()
    }

    stages {
        stage('Get Code') {
            steps {
                git 'https://github.com/jdap-do/res-helloworld.git'
                echo WORKSPACE
                bat 'dir'
                stash name:'code', includes:'**'
            }
        }

        stage('Lint - flake8') {
            agent { label 'agent1' }
            steps {
                unstash 'code'
                bat '''
                    C:\home\agent1\.local\bin\flake8 app test
                '''
            }
        }

        stage('Security - bandit') {
            agent { label 'agent1' }
            steps {
                unstash 'code'
                bat '''
                    C:\home\agent1\.local\bin\bandit -r app
                '''
            }
        }

        stage('Build') {
            steps {
                echo 'Eyyy, esto es Python. No hay que compilar nada!!!'
            }
        }

        stage('Tests') {
            parallel {
                stage('Unit') {
                    agent { label 'agent1' }
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            unstash 'code'
                            bat '''
                                set PYTHONPATH=%WORKSPACE%
                                C:\home\agent1\.local\bin\coverage.exe run -m pytest test\unit
                                C:\home\agent1\.local\bin\coverage.exe xml -o coverage-unit.xml
                            '''
                            stash name: 'unit-res', includes: 'coverage-unit.xml, result-unit.xml'
                        }
                    }
                }

                stage('Rest') {
                    agent { label 'agent2' }
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            unstash 'code'
                            bat '''
                                set FLASK_APP=app/api.py
                                start /B C:\home\agent2\.local\bin\flask.exe run
                                timeout /t 6

                                start /B java -jar C:\home\agent2\wiremock\wiremock-jre8-standalone-2.28.0.jar --port 9090 --root-dir C:\home\agent2\wiremock
                                timeout /t 20

                                set PYTHONPATH=%WORKSPACE%
                                C:\home\agent2\.local\bin\coverage.exe run -m pytest test\rest
                                C:\home\agent2\.local\bin\coverage.exe xml -o coverage-rest.xml
                            '''
                            stash name: 'rest-res', includes: 'coverage-rest.xml, result-rest.xml'
                        }
                    }
                }
            }
        }

        stage('Performance - JMeter') {
            agent { label 'agent1' }
            steps {
                unstash 'code'
                bat '''
                    C:\home\agent1\apache-jmeter\bin\jmeter.bat -n -t test\performance\test-plan.jmx -l test\performance\report.jtl -e -o test\performance\report
                '''
            }
        }

        stage('Results') {
            steps {
                unstash 'unit-res'
                unstash 'rest-res'
                junit 'result*.xml'
                cobertura coberturaReportFile: 'coverage-*.xml'
            }
        }
    }
}