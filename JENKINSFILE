pipeline {
    agent none

    stages {
        stage('Obtener código') {
            agent { label 'master' }
            steps {
                deleteDir()
                git 'https://github.com/jdap-do/res-helloworld.git'
                bat 'dir'
                stash name: 'source', includes: '**/*'
            }
        }

        stage('Pruebas Unitarias') {
            agent { label 'agent1' }
            environment {
                PYTHONPATH = "${env.WORKSPACE}"
            }
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    unstash 'source'
                    bat 'pytest --junitxml=result-unit.xml test/unit'
                    stash name: 'unit', includes: 'result-unit.xml'
                }
            }
        }

        stage('Pruebas de integración (REST)') {
            agent { label 'agent2' }
            environment {
                PYTHONPATH = "${env.WORKSPACE}"
                FLASK_APP = "app/api.py"
            }
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    unstash 'source'
                    bat 'start /B C:/home/agent2/.local/bin/flask.exe run'
                    bat 'start /B java -jar C:/home/agent2/wiremock/wiremock-jre8-standalone-2.28.0.jar --port 9090 --root-dir C:/home/agent2/wiremock'
                    bat 'ping 127.0.0.1 -n 20 > nul'
                    bat 'pytest --junitxml=result-rest.xml test/rest'
                    stash name: 'rest', includes: 'result-rest.xml'
                }
            }
        }

        stage('Análisis estático (flake8)') {
            agent { label 'agent1' }
            environment {
                PYTHONPATH = "${env.WORKSPACE}"
            }
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    unstash 'source'
                    bat 'C:/home/agent1/.local/bin/flake8 app test --exit-zero > flake8.log'
                    recordIssues tools: [flake8(pattern: 'flake8.log')]
                }
            }
        }

        stage('Análisis de seguridad (bandit)') {
            agent { label 'agent1' }
            environment {
                PYTHONPATH = "${env.WORKSPACE}"
            }
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    unstash 'source'
                    bat '''
                        C:/Users/joeda/AppData/Local/Programs/Python/Python313/Scripts/bandit.exe -r app -f custom -o bandit.out --msg-template "{abspath}:{line}: [{test_id}] {msg}" || exit 0
                    '''
                    recordIssues tools: [
                        pyLint(name: 'Bandit', pattern: 'bandit.out')
                    ], qualityGates: [
                        [threshold: 2, type: 'TOTAL', unstable: true],
                        [threshold: 4, type: 'TOTAL', unstable: false]
                    ]
                }
            }
        }

        stage('Resultados') {
            agent { label 'master' }
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    unstash 'unit'
                    unstash 'rest'
                    junit 'result-*.xml'
                }
            }
        }
    }
}