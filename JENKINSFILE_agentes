pipeline {
    agent any

    options { skipDefaultCheckout() }

    stages {
        stage('Get Code') {
            steps {
                git 'https://github.com/anieto-unir/helloworld.git'
                echo WORKSPACE
                bat 'dir'
                stash name:'code', includes:'**'
            }
        }

        stage('Build') {
            steps {
                echo 'Eyyy, esto es Python. No hay que compilar nada!!!'
            }
        }

        stage('Tests') {
            parallel {
                stage('Unit') {
                    agent { label 'agent1' }
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            unstash name: 'code'
                            bat '''
                                dir
                                set PYTHONPATH=%WORKSPACE%
                                C:\\home\\agent1\\.local\\bin\\pytest.exe --junitxml=result-unit.xml test\\unit
                            '''
                            stash name: 'unit-res', includes: 'result-unit.xml'
                        }
                    }
                }

                stage('Rest') {
                    agent { label 'agent2' }
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            unstash name: 'code'
                            bat '''
                                set FLASK_APP=app/api.py
                                start /B C:\\home\\agent2\\.local\\bin\\flask.exe run

                                timeout /t 4 >nul

                                start /B java -jar C:\\home\\agent2\\wiremock\\wiremock-standalone-3.3.1.jar --port 9090 --root-dir C:\\home\\agent2\\wiremock

                                timeout /t 15 >nul

                                set PYTHONPATH=%WORKSPACE%
                                C:\\home\\agent2\\.local\\bin\\pytest.exe --junitxml=result-rest.xml test\\rest
                            '''
                            stash name: 'rest-res', includes: 'result-rest.xml'
                        }
                    }
                }
            }
        }

        stage('Results') {
            steps {
                unstash name: 'unit-res'
                unstash name: 'rest-res'
                junit 'result*.xml'
            }
        }
    }
}